{"ast":null,"code":"var _jsxFileName = \"D:\\\\FER202\\\\26_02_2025___PE 2024 Summer\\\\PE 2024 Summer\\\\src\\\\context\\\\MovieContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BASE_URL } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\nconst MovieProvider = ({\n  children\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [producers, setProducers] = useState([]);\n  const [directors, setDirectors] = useState([]);\n  const [stars, setStars] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [selectedProducer, setSelectedProducer] = useState(null);\n  const [selectedDirector, setSelectedDirector] = useState(null);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const result = await axios.get(`${BASE_URL}/movies`);\n      setMovies(result.data);\n    };\n    const fetchProducers = async () => {\n      const result = await axios.get(`${BASE_URL}/producers`);\n      setProducers(result.data);\n    };\n    const fetchDirectors = async () => {\n      const result = await axios.get(`${BASE_URL}/directors`);\n      setDirectors(result.data);\n    };\n    const fetchStars = async () => {\n      const result = await axios.get(`${BASE_URL}/stars`);\n      setStars(result.data);\n    };\n    fetchMovies();\n    fetchProducers();\n    fetchDirectors();\n    fetchStars();\n  }, []);\n  useEffect(() => {\n    const uniqueGenres = [...new Set(movies.flatMap(movie => movie.genres))];\n    setGenres(uniqueGenres);\n  }, [movies]);\n  const handleGenreSelect = genre => {\n    setSelectedGenre(genre);\n    setSelectedProducer(null);\n    setSelectedDirector(null);\n  };\n  const handleProducerSelect = producerId => {\n    setSelectedProducer(producerId);\n    setSelectedGenre(null);\n    setSelectedDirector(null);\n  };\n  const handleDirectorSelect = directorId => {\n    setSelectedDirector(directorId);\n    setSelectedGenre(null);\n    setSelectedProducer(null);\n  };\n  const filteredMovies = movies.filter(movie => {\n    const genreFilter = movie => !selectedGenre || movie.genres.includes(selectedGenre);\n    const producerFilter = movie => !selectedProducer || movie.producer === selectedProducer;\n    const directorFilter = movie => !selectedDirector || movie.director === selectedDirector;\n    return genreFilter(movie) && producerFilter(movie) && directorFilter(movie);\n  });\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      movies: filteredMovies,\n      producers,\n      directors,\n      stars,\n      genres,\n      handleGenreSelect,\n      handleProducerSelect,\n      handleDirectorSelect,\n      setMovies\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieProvider, \"/EClmk9JC+ix+SmTcrFYXlmwqTs=\");\n_c = MovieProvider;\nexport default MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","BASE_URL","jsxDEV","_jsxDEV","MovieContext","MovieProvider","children","_s","movies","setMovies","producers","setProducers","directors","setDirectors","stars","setStars","genres","setGenres","selectedGenre","setSelectedGenre","selectedProducer","setSelectedProducer","selectedDirector","setSelectedDirector","fetchMovies","result","get","data","fetchProducers","fetchDirectors","fetchStars","uniqueGenres","Set","flatMap","movie","handleGenreSelect","genre","handleProducerSelect","producerId","handleDirectorSelect","directorId","filteredMovies","filter","genreFilter","includes","producerFilter","producer","directorFilter","director","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FER202/26_02_2025___PE 2024 Summer/PE 2024 Summer/src/context/MovieContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../utils/api';\r\n\r\nexport const MovieContext = createContext();\r\n\r\nconst MovieProvider = ({ children }) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [producers, setProducers] = useState([]);\r\n    const [directors, setDirectors] = useState([]);\r\n    const [stars, setStars] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const [selectedGenre, setSelectedGenre] = useState(null);\r\n    const [selectedProducer, setSelectedProducer] = useState(null);\r\n    const [selectedDirector, setSelectedDirector] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            const result = await axios.get(`${BASE_URL}/movies`);\r\n            setMovies(result.data);\r\n        };\r\n\r\n        const fetchProducers = async () => {\r\n            const result = await axios.get(`${BASE_URL}/producers`);\r\n            setProducers(result.data);\r\n        };\r\n\r\n        const fetchDirectors = async () => {\r\n            const result = await axios.get(`${BASE_URL}/directors`);\r\n            setDirectors(result.data);\r\n        };\r\n\r\n        const fetchStars = async () => {\r\n            const result = await axios.get(`${BASE_URL}/stars`);\r\n            setStars(result.data);\r\n        };\r\n\r\n        fetchMovies();\r\n        fetchProducers();\r\n        fetchDirectors();\r\n        fetchStars();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const uniqueGenres = [...new Set(movies.flatMap(movie => movie.genres))];\r\n        setGenres(uniqueGenres);\r\n    }, [movies]);\r\n\r\n    const handleGenreSelect = (genre) => {\r\n        setSelectedGenre(genre);\r\n        setSelectedProducer(null);  \r\n        setSelectedDirector(null);  \r\n    };\r\n\r\n    const handleProducerSelect = (producerId) => {\r\n        setSelectedProducer(producerId);\r\n        setSelectedGenre(null);  \r\n        setSelectedDirector(null);  \r\n    };\r\n\r\n    const handleDirectorSelect = (directorId) => {\r\n        setSelectedDirector(directorId);\r\n        setSelectedGenre(null);  \r\n        setSelectedProducer(null);  \r\n    };\r\n\r\n    const filteredMovies = movies.filter(movie => {\r\n        const genreFilter = (movie) => !selectedGenre || movie.genres.includes(selectedGenre);\r\n        const producerFilter = (movie) => !selectedProducer || movie.producer === selectedProducer;\r\n        const directorFilter = (movie) => !selectedDirector || movie.director === selectedDirector;\r\n        return genreFilter(movie) && producerFilter(movie) && directorFilter(movie);\r\n    });\r\n\r\n    return (\r\n        <MovieContext.Provider value={{\r\n            movies: filteredMovies,\r\n            producers,\r\n            directors,\r\n            stars,\r\n            genres,\r\n            handleGenreSelect,\r\n            handleProducerSelect,\r\n            handleDirectorSelect,\r\n            setMovies\r\n        }}>\r\n            {children}\r\n        </MovieContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MovieProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}